if(rootProject.ext.android.is_application.toBoolean()){
    apply plugin: 'com.android.application'
}else {
    apply plugin: 'com.android.library'
}

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        if(rootProject.ext.android.is_application.toBoolean()){
            applicationId "com.maniu.member"
        }
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets{
        main{
            if(rootProject.ext.android.is_application.toBoolean()){
                manifest.srcFile 'src/main/AndroidManifest.xml'
                java.srcDirs 'src/main/module'
            }else {
                manifest.srcFile 'src/main/manifest/AndroidManifest.xml'
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation rootProject.ext.dependencies.appcompat
    implementation rootProject.ext.dependencies.constraintlayout

    testImplementation rootProject.ext.dependencies.publicTest

    androidTestImplementation rootProject.ext.dependencies.publicTestImplementation

    implementation project(rootProject.ext.dependencies.arouter)
    implementation project(rootProject.ext.dependencies.base)

    annotationProcessor project(rootProject.ext.dependencies.annotation_compiler)
    implementation project(rootProject.ext.dependencies.annotation)
}
